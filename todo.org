* randomize node creation in Set.insert!
** add prob field
*** divide by two in init loop
*** multiply in insert loop    

* add multi param to Set.insert!
** skip early return

* add setindex!/getindex support

* implement Set.delete!
** loop while match, opt val param

* change Void to nothing in Fbls.jl

* implement Set.range
** return iterator

* add trans support
* add HashUnix
** use tuple keys
** base on Dict
* add HashMultix
** base on Dict of Sets
* add sorted idxs
